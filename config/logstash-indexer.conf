input {
    tcp {
        port  => 6379
        codec => json_lines
    }

    kinesis {
        kinesis_stream_name => '@@KINESIS_STREAM_NAME'
        application_name => '@@KINESIS_APPLICATION_NAME'
        region => '@@KINESIS_REGION'
        codec => json { }
    }
}

filter {
    if [type] == "elb" {
        grok {
            match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:loadbalancer} %{IP:client_ip}:%{NUMBER:client_port:int} %{IP:backend_ip}:%{NUMBER:backend_port:int} %{NUMBER:request_processing_time:float} %{NUMBER:backend_processing_time:float} %{NUMBER:response_processing_time:float} (?:%{NUMBER:elb_status_code:int}|-) (?:%{NUMBER:backend_status_code:int}|-) %{NUMBER:received_bytes:int} %{NUMBER:sent_bytes:int} (?:%{QS:request}|-) (?:%{QS:userAgent}|-) (?:%{NOTSPACE:sslcipher}|-) (?:%{NOTSPACE:sslprotocol}|-)"]
        }
        date {
            match => [ "timestamp", "ISO8601" ]
        }
        # Add geolocalization attributes based on client_ip.
        geoip {
            source => "client_ip"
        }
        # Add User Agent attributes based on userAgent.
        useragent {
            source => "userAgent"
        }
    }
}

output {
    elasticsearch { hosts => ["localhost:9200"] }
    # stdout { codec => rubydebug }
}
